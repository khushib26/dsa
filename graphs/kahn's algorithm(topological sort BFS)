class Solution
{
	public:
	 void dfs(int node,vector<int> adj[],vector<bool> &visited, stack<int> &st)
	 {
	     visited[node]=true;
	     for(auto it:adj[node])
	     {
	         if(visited[it]==false)
	         {
	             dfs(it,adj,visited,st);
	         }
	     }
	     st.push(node);
	 }
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<bool> visited(V,false);
	    vector<int> ans;
	    stack<int> st;
	    //dfs(0,adj,visited,st);
	    for(int i=0;i<V;i++)
	    {
	        if(visited[i]==false)
	        {
	            dfs(0,adj,visited,st);
	        }
	    }
	    while(!st.empty())
	    {
	        ans.push_back(st.top());
	        st.pop();
	    }
	    return ans;
	}
};
