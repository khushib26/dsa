class Solution {
public:
    int lcs(string s,string str,int n,int m)
    {
        int dp[n+1][m+1];
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
              if(i==0||j==0)
              {
                  dp[i][j]=0;
              }
                else if(s[i-1]==str[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else
                {
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[n][m];
    }
    int longestPalindromeSubseq(string s) {
        int n=s.size();
        string str="";
        for(int i=n-1;i>=0;i--)
        {
            str=str+s[i];
        }
        int m=str.size();
       return lcs(s,str,n,m);
    }
};
