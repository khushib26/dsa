class Solution{   
public:
    //int dp[3][50001];
    long long int fn(int N,int r[],int g[],int b[])
    {
        long dp[N][3];
        dp[0][0]=r[0];
        dp[0][1]=g[0];
        dp[0][2]=b[0];
        for(int i=1;i<N;i++)
        {
            dp[i][0]=min(dp[i-1][1],dp[i-1][2])+r[i];
            dp[i][1]=min(dp[i-1][0],dp[i-1][2])+g[i];
            dp[i][2]=min(dp[i-1][0],dp[i-1][1])+b[i];
        }
        return min(dp[N-1][0],min(dp[N-1][1],dp[N-1][2]));
    }
    long long int distinctColoring(int N, int r[], int g[], int b[]){
        //memset(dp,-1,sizeof(dp));
        return fn(N,r,g,b);
    }
};
