class Solution {
public:
    int dp[3005][1005];
    long long mod=1e9+7;
    int fn(int s,int e,int k)
    {
        if(k==0)
        {
            if(s==e)
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
        if(dp[s+1000][k]!=-1)
        {
            return dp[s+1000][k];
        }
        long long ways=0;
        ways=(ways%mod+fn(s+1,e,k-1)%mod)%mod;
        ways=(ways%mod+fn(s-1,e,k-1)%mod)%mod;
        return dp[s+1000][k]=ways;
    }
    int numberOfWays(int startPos, int endPos, int k) {
       memset(dp,-1,sizeof(dp));
       return fn(startPos,endPos,k);
    }
};
