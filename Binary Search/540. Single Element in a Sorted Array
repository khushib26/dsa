class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        if(nums.size()==1)
        {
            return nums[0];
        }
        int n=nums.size();
        if(nums[0]!=nums[1])
        {
            return nums[0];
        }
        if(nums[n-2]!=nums[n-1])
        {
            return nums[n-1];
        }
        int l=0;
        int r=n-1;
        int mid;
        while(l<=r)
        {
            mid=l+(r-l)/2;
            if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1])
            {
                return nums[mid];
            }
            else if((nums[mid]==nums[mid-1] && mid%2==1) || (nums[mid]==nums[mid+1] && mid%2==0) )
            {
                l=mid+1;
            }
            else
            {
                r=mid-1;
            }
        }
        return -1;
    }
        
};
