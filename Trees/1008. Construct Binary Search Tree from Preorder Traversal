class Solution {
public:
    TreeNode* constructBST(vector<int> &preorder , int key, int &preorderidx, int min, int max,int n)
    {
        if(preorderidx>=n)
        {
            return NULL;
        }
          TreeNode *root = NULL;
        if(key>min && key<max)
        {
            root = new TreeNode(key);
            preorderidx = preorderidx+1;
            if(preorderidx<n)
            {
                root->left = constructBST( preorder,preorder[preorderidx],preorderidx,min,key,n);
            }
            if(preorderidx<n)
            {
                root->right = constructBST(preorder,preorder[preorderidx],preorderidx,key,max,n);
            }
        }
        return root;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
       int preorderidx=0;
        return constructBST(preorder,preorder[preorderidx],preorderidx,INT_MIN,INT_MAX,preorder.size());
;
    }
};
