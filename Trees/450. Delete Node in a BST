class Solution {
public:
    TreeNode* inordersuccessor(TreeNode *root)
    {
        TreeNode *curr = root;
        while(curr && curr->left!=NULL)
        {
            curr = curr->left;
        }
        return curr;
        
    }
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root==NULL)
        {
            return NULL;
        }
        if(root->val > key)
        {
            root->left = deleteNode(root->left,key);
        }
        else if(root->val < key)
        {
            root->right = deleteNode(root->right,key);
        }
        else
        {
            if(root->left == NULL)
            {
                TreeNode *temp = root->right;
                delete root;
                return temp;
            }
            if(root->right == NULL)
            {
                TreeNode *temp = root->left;
                delete root;
                return temp;
            }
            TreeNode *temp = inordersuccessor(root->right);
            root->val = temp->val;
           root->right =  deleteNode(root->right,temp->val);
        }
        return root;
    }
   
};
