class Solution {
public:
    int depth(TreeNode *root)
    {
        if(root==NULL)
        {
            return 0;
        }
        int height=1+max(depth(root->left),depth(root->right));
        return height;

    }
    TreeNode *temp;
    void sub(TreeNode *root)
    {
        if(root==NULL)
        {
            return;
        }
        int lh=depth(root->left);
        int rh=depth(root->right);
        if(lh-rh==0)
        {
            temp= root;
            return;
        }
        if(lh>rh)
        {
            sub(root->left);
        }
        else
        {
            sub(root->right);
        }
    }
    TreeNode* subtreeWithAllDeepest(TreeNode* root) {
        if(root==NULL)
        {
            return NULL;
        }
        sub(root);
        return temp;
    }
};
