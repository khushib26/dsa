class Solution {
public:
    int ans=1;
    long long int mod=1e9+7;
    bool count(int n)
    {
        if(n==2)
        {
            return true;
        }
        for(int i=2;i<=sqrt(n);i++)
        {
            if(n%i==0)
            {
                return false;
            }
        }
        return true;
    }
    int fact(int n)
    {
       if(n<=1)
       {
           return 1;
       }
       return (fact(n-1)%mod)*(n%mod)%mod;
    }
    int numPrimeArrangements(int n) {
        int c=0;
        for(int i=2;i<=n;i++)
        {
            if(count(i)==true)
            {
                c++;
            }
        }
        int res;
        res=((fact(c)%mod)*(fact(n-c)%mod))%mod;
        return res;
    }
};
